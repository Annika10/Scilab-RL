# @package _global_
# Changes specified in this config should be interpreted as relative to the _global_ package.
defaults:
  # access algorithm config group to get the default parameters of hac
  - override /algorithm: hac

env: 'AntReacher-v1'

# The n last epochs over which to average for determining early stopping condition.
early_stop_last_n: 4

performance_testing_conditions:
  # In 2 out of 3 tests, the test/success rate should be at least 0.8 after 150000 steps.

  total_runs: 3 # How many runs in total:

  succ_runs: 2 # This number of runs should meet the conditions:

  eval_columns: test/success_rate # This is what we evaluate to determine success. Will use this to override the \'early_stop_data_column\' parameter of main.yaml

  eval_value: 0.8 # This is the value we determine for success. Will use this to determine and override the \'early_stop_threshold\' parameter of main.yaml

  max_steps: 150000 # This is the time limit for checking the success. Will use this and the \'eval_after_n_steps\' parameter of main.yaml to determine the n_epochs parameter in main.yaml.


algorithm:
  # Steps per level from highest to lowest, separated by comma. There must be one -1
  # in the list to indicates the layer where the time scale is determined from the
  # environment's predefined steps.
  time_scales:
    - 20
    - 20

  # The percentage of subgoals to test.
  subgoal_test_perc: 0.0

hydra:
  sweeper:
    n_jobs: 3
    _target_: hydra_plugins.hydra_custom_optuna_sweeper.performance_testing_sweeper.PerformanceTestingSweeper
    study_name: hac_2_layer_AntReacher-v1_p-test
    storage: sqlite:///hac_2_layer_AntReacher-v1_p-test.db