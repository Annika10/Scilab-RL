# @package _global_
# Changes specified in this config should be interpreted as relative to the _global_ package.
defaults:
  # access algorithm config group to get the default parameters of hac
  - override /algorithm: hac

# overwrite parameters of main.yaml
env: 'FetchReach-v1'

# The n last epochs over which to average for determining early stopping condition.
early_stop_last_n: 4

performance_testing_conditions:
  # In 2 out of 3 tests, the test/success rate should be at least 0.1 after 36000 steps.

  total_runs: 3 # How many runs in total:

  succ_runs: 2 # This number of runs should meet the conditions:

  eval_columns: test/success_rate # This is what we evaluate to determine success. Will use this to override the \'early_stop_data_column\' parameter of main.yaml

  eval_value: 0.1 # This is the value we determine for success. Will use this to determine and override the \'early_stop_threshold\' parameter of main.yaml

  max_steps: 36000 # This is the time limit for checking the success. Will use this and the \'eval_after_n_steps\' parameter of main.yaml to determine the n_epochs parameter in main.yaml.

# overwrite algorithm parameters
algorithm:
  # number of hindsight goals.
  n_sampled_goal: 7

  # Whether to consider an episode as done *in hindsight* during goal replay
  # if the hindsight goal has been achieved. This is important e.g. in SAC,
  # where the discounted expected return is set to 0 of an episode is done.
  # Only relevant if set_fut_ret_zero_if_done = 1.
  hindsight_sampling_done_if_success: 1

hydra:
  sweeper:
    n_jobs: 3
    _target_: hydra_plugins.hydra_custom_optuna_sweeper.performance_testing_sweeper.PerformanceTestingSweeper
    study_name: hac_2_layer_FetchReach-v1_p-test
    storage: sqlite:///hac_2_layer_FetchReach_p-test.db
