name: 'hac'
exp_path_params:
#  - 'time_scales'
  - 'use_action_replay'
  - 'subgoal_test_perc'
  - 'ep_early_done_on_succ'
  - 'goal_selection_strategy'
  - 'n_sampled_goal'
#  - 'learning_rates'
  - 'hindsight_sampling_done_if_success'
  - 'set_fut_ret_zero_if_done'

verbose: True

# 'future', 'future2', 'final', 'episode', 'rndend', 'rndend2'
goal_selection_strategy: 'future'

n_sampled_goal: 4

# number of steps in each layer after which to train.
# 0 sets the training frequency to once per episode.
train_freq: 0

# The number of training batches per episode. 0 sets training batches to number of
# actions executed since last training in each layer, which effectively means that n_train_batches=n_train_freq.
n_train_batches: 0

# The number of transitions in each layer required to start NN training.
learning_starts: 100

# The learning rates of the layers. From highest to lowest layer.
learning_rates:
  - 3e-4
  - 3e-4

# Whether to use action replay
use_action_replay: 1

# Number of successive successful steps to stop an episode early when
# the (sub-)goal has been achieved. 0 disables early stopping.
ep_early_done_on_succ: 2

# Whether to consider an episode as done *in hindsight* during goal replay
# if the hindsight goal has been achieved. This is important e.g. in SAC,
# where the discounted expected return is set to 0 of an episode is done.
# Only relevant if set_fut_ret_zero_if_done = 1.
hindsight_sampling_done_if_success: 1

# Whether to set the future expected return to 0 if an episode is
# done when computing the TD q value.
set_fut_ret_zero_if_done: 0

# Whether and how to render the rollout execution during training. \'record\' is for video, \'display\' for direct visualization, \'null\' is for not rendering at all.
render_train: null

# Whether and how to render the rollout execution during testing.
# \'record\' is for video, \'display\' for direct visualization.
render_test: null

# The number of evaluations (epochs) after which to render the simluation.
# This has only an effect if \'render_train\' or \'render_test\' is not set to \'none\'.
render_every_n_eval: 15

# Steps per level from highest to lowest, separated by comma. There must be one -1
# in the list to indicates the layer where the time scale is determined from the
# environment's predefined steps.
time_scales:
  - 7
  - 7

# The percentage of subgoals to test.
subgoal_test_perc: 0.3
